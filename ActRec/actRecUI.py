#!/usr/bin/env python
# -*- coding: CP1252 -*-
#
# generated by wxGlade 0.6.8 (standalone edition) on Sun Jan 11 22:55:04 2015
#

import wx
import os 

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

###########################################
import sys 
from wx.lib.mixins.listctrl import CheckListCtrlMixin, ListCtrlAutoWidthMixin

import controller as controller 
from actrec import actRec 
from models import create_db 


def set_global_db_name(dbname):
    global CURRENT_DATABASE_FILE 
    CURRENT_DATABASE_FILE = dbname

def DBSession():
    Session = controller.connect(CURRENT_DATABASE_FILE)
    return Session() 

ID_EXIT = 101
ID_OPEN = 102 
ID_NEW = 103
ID_SAVE = 104 

ID_DYNAMIC_RULE = 401
ID_STATIC_RULE = 402
ID_TRIGGER_RULE = 403 
ID_ALLOWANCE_RULE = 404 
ID_INHIBIT_RULE = 405 
ID_NONCONC_RULE = 406 
ID_DEFAULT_RULE = 407 
ID_OBSERVATION = 408 
ID_ACTQUERY = 409 


ID_ACTIVITY = 501 



# global DBSession 

def fluentChoices(session):
    return list(controller.all_fluents(session))
# for i in fluentChoices(): 
#     print i 
def actionChoices(session):
    return list(controller.all_actions(session))
    

class CheckListCtrl(wx.ListCtrl, CheckListCtrlMixin, ListCtrlAutoWidthMixin):
    def __init__(self, parent):
        wx.ListCtrl.__init__(self, parent, -1, style=wx.LC_REPORT | wx.SUNKEN_BORDER)
        CheckListCtrlMixin.__init__(self)
        ListCtrlAutoWidthMixin.__init__(self)


############################################



class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.ActRec_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_NEW, _("New"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_OPEN, _("Open"), "", wx.ITEM_NORMAL)
        # wxglade_tmp_menu.Append(ID_SAVE, _("Save"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(ID_EXIT, _("Quit"), "", wx.ITEM_NORMAL)
        self.ActRec_menubar.Append(wxglade_tmp_menu, _("File "))
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu_sub = wx.Menu()
        wxglade_tmp_menu_sub.Append(ID_DYNAMIC_RULE, _("Dynamic Rule"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu_sub.Append(ID_STATIC_RULE, _("Static Rule"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu_sub.Append(ID_TRIGGER_RULE, _("Trigger Rule"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu_sub.Append(ID_ALLOWANCE_RULE, _("Allowance Rule"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu_sub.Append(ID_INHIBIT_RULE, _("Inhibition Rule"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu_sub.Append(ID_NONCONC_RULE, _("Non-Concurrency Rule"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu_sub.Append(ID_DEFAULT_RULE, _("Default Rule"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu_sub.Append(ID_OBSERVATION, _("Observation"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu_sub.Append(ID_ACTQUERY, _("Action Query"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendMenu(wx.ID_ANY, _("Add New"), wxglade_tmp_menu_sub, "")
        self.ActRec_menubar.Append(wxglade_tmp_menu, _("Rule"))
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_ACTIVITY, _("Add "), "", wx.ITEM_NORMAL)
        self.ActRec_menubar.Append(wxglade_tmp_menu, _("Activity"))
        self.SetMenuBar(self.ActRec_menubar)
        # Menu Bar end

        self.__set_properties()
        self.__do_layout()
        
        self.Bind(wx.EVT_MENU, self.open_file_diag, id=ID_OPEN)
        self.Bind(wx.EVT_MENU, self.create_new_diag, id=ID_NEW)        
        self.Bind(wx.EVT_MENU, self.add_dynamic_diag, id=ID_DYNAMIC_RULE)
        self.Bind(wx.EVT_MENU, self.add_static_diag, id=ID_STATIC_RULE)
        self.Bind(wx.EVT_MENU, self.add_trigger_diag, id=ID_TRIGGER_RULE)
        self.Bind(wx.EVT_MENU, self.add_allowance_diag, id=ID_ALLOWANCE_RULE)
        self.Bind(wx.EVT_MENU, self.add_inhibit_diag, id=ID_INHIBIT_RULE)
        self.Bind(wx.EVT_MENU, self.add_nonconc_diag, id=ID_NONCONC_RULE)
        self.Bind(wx.EVT_MENU, self.add_default_diag, id=ID_DEFAULT_RULE)
        self.Bind(wx.EVT_MENU, self.add_observation_diag, id=ID_OBSERVATION)
        self.Bind(wx.EVT_MENU, self.add_act_query_diag, id=ID_ACTQUERY)

        self.Bind(wx.EVT_MENU, self.Activity_diag, id=ID_ACTIVITY)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle(_("ActRec"))
        self.SetSize((400, 300))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        self.SetSizer(sizer_1)
        self.Layout()
        self.Centre()
        # end wxGlade
    
    def create_new_diag(self, event): 
        newd = CreateNewDiag(None)
        newd.ShowModal() 
        newd.Destroy()

    def open_file_diag(self, event):
        dlg = wx.FileDialog(self, message="Open file...", defaultDir=os.getcwd(),
            defaultFile="", style=wx.OPEN)
        if dlg.ShowModal() == wx.ID_OK:
            filename = dlg.GetPath().split('\\')[-1]
            set_global_db_name(filename)
            # CURRENT_DATABASE_FILE = filename
            # print '*' * 40 
            # print CURRENT_DATABASE_FILE
            DBSession = controller.connect(CURRENT_DATABASE_FILE)
            self.SetTitle(_('<' + filename + "> - ActRec"))

        dlg.Destroy()

    def add_dynamic_diag(self, event):  # wxGlade: MyFrame.<event_handler>
        # print "Event handler 'add_dynamic_diag' not implemented!"
        # event.Skip()
        # DynamicRuleDiag(self).Show() 
        addf = DynamicRuleDiag(None)
        addf.ShowModal() 
        addf.Destroy()

    def add_static_diag(self, event):  # wxGlade: MyFrame.<event_handler>
        adds = StaticRuleDiag(None)
        adds.ShowModal() 
        adds.Destroy() 

    def Activity_diag(self, event):  # wxGlade: MyFrame.<event_handler>
        # ActivityDiag(self).Show()
        actd = ActivityDiag(None)
        actd.ShowModal() 
        actd.Destroy()

    def add_trigger_diag(self, event):  # wxGlade: MyFrame.<event_handler>
        adds = TriggerRuleDiag(None)
        adds.ShowModal() 
        adds.Destroy() 
    def add_allowance_diag(self, event):  # wxGlade: MyFrame.<event_handler>
        adds = AllowanceRuleDiag(None)
        adds.ShowModal() 
        adds.Destroy() 
 
    def add_inhibit_diag(self, event):  # wxGlade: MyFrame.<event_handler>
        adds = InhibitRuleDiag(None)
        adds.ShowModal() 
        adds.Destroy() 
        
    def add_nonconc_diag(self, event):  # wxGlade: MyFrame.<event_handler>
        adds = NonconcDiag(None)
        adds.ShowModal() 
        adds.Destroy() 
        
    def add_default_diag(self, event):  # wxGlade: MyFrame.<event_handler>
        adds = DefaultRuleDiag(None)
        adds.ShowModal() 
        adds.Destroy() 

    def add_observation_diag(self, event):  # wxGlade: MyFrame.<event_handler>
        adds = ObservationDiag(None)
        adds.ShowModal() 
        adds.Destroy() 
        
    def add_act_query_diag(self, event):  # wxGlade: MyFrame.<event_handler>
        adds = ActionQueryDiag(None)
        adds.ShowModal() 
        adds.Destroy() 

# end of class MyFrame
####################################

class ActionQueryDiag(wx.Dialog):
    def __init__(self, *args, **kwds):
        session = DBSession() 
        # begin wxGlade: ActionQueryDiag.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.combo_box_2 = wx.ComboBox(self, wx.ID_ANY, choices=actionChoices(session), style=wx.CB_DROPDOWN)
        self.sizer_3_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Action"))
        self.spin_ctrl_1 = wx.SpinCtrl(self, wx.ID_ANY, "0", min=0, max=100)
        self.sizer_4_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Time"))
        self.sizer_6_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Action Query"))
        self.button_3 = wx.Button(self, wx.ID_ANY, _("Add"))
        self.button_4 = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.add_dyrule, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.close_diag, self.button_4)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: ActionQueryDiag.__set_properties
        self.SetTitle(_("Action Query"))
        self.SetSize((500, 250))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ActionQueryDiag.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(1, 3, 0, 0)
        self.sizer_6_copy_staticbox.Lower()
        sizer_6_copy = wx.StaticBoxSizer(self.sizer_6_copy_staticbox, wx.HORIZONTAL)
        self.sizer_4_staticbox.Lower()
        sizer_4 = wx.StaticBoxSizer(self.sizer_4_staticbox, wx.HORIZONTAL)
        self.sizer_3_staticbox.Lower()
        sizer_3 = wx.StaticBoxSizer(self.sizer_3_staticbox, wx.HORIZONTAL)
        sizer_3.Add(self.combo_box_2, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_6_copy.Add(sizer_3, 1, wx.EXPAND, 0)
        sizer_4.Add(self.spin_ctrl_1, 0, 0, 0)
        sizer_6_copy.Add(sizer_4, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_6_copy, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_3, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_4, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(grid_sizer_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        self.SetSizer(sizer_2)
        self.Layout()
        # end wxGlade

    def add_dyrule(self, event):  # wxGlade: ObservationDiag.<event_handler>
        session = DBSession()
        action = self.combo_box_2.GetValue()
        at_time = self.spin_ctrl_1.GetValue()
        print action, at_time 
        controller.add_action_query(session, action, at_time)

    def close_diag(self, event):  # wxGlade: ObservationDiag.<event_handler>
        self.Close(True)

####################################

class ObservationDiag(wx.Dialog):
    def __init__(self, *args, **kwds):
        session = DBSession()
        # begin wxGlade: ObservationDiag.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.combo_box_2 = wx.ComboBox(self, wx.ID_ANY, choices=fluentChoices(session), style=wx.CB_DROPDOWN)
        self.sizer_3_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Fluent"))
        self.spin_ctrl_1 = wx.SpinCtrl(self, wx.ID_ANY, "0", min=0, max=100)
        self.sizer_4_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Time"))
        self.sizer_6_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Fluent Observation"))
        self.button_3 = wx.Button(self, wx.ID_ANY, _("Add"))
        self.button_4 = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.add_dyrule, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.close_diag, self.button_4)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: ObservationDiag.__set_properties
        self.SetTitle(_("Observation"))
        self.SetSize((500, 250))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ObservationDiag.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(1, 3, 0, 0)
        self.sizer_6_copy_staticbox.Lower()
        sizer_6_copy = wx.StaticBoxSizer(self.sizer_6_copy_staticbox, wx.HORIZONTAL)
        self.sizer_4_staticbox.Lower()
        sizer_4 = wx.StaticBoxSizer(self.sizer_4_staticbox, wx.HORIZONTAL)
        self.sizer_3_staticbox.Lower()
        sizer_3 = wx.StaticBoxSizer(self.sizer_3_staticbox, wx.HORIZONTAL)
        sizer_3.Add(self.combo_box_2, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_6_copy.Add(sizer_3, 1, wx.EXPAND, 0)
        sizer_4.Add(self.spin_ctrl_1, 0, 0, 0)
        sizer_6_copy.Add(sizer_4, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_6_copy, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_3, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_4, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(grid_sizer_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        self.SetSizer(sizer_2)
        self.Layout()
        # end wxGlade

    def add_dyrule(self, event):  # wxGlade: ObservationDiag.<event_handler>
        session = DBSession()
        fluent = self.combo_box_2.GetValue()
        at_time = self.spin_ctrl_1.GetValue()
        controller.add_fluent_observation(session, fluent, at_time)

    def close_diag(self, event):  # wxGlade: ObservationDiag.<event_handler>
        self.Close(True)

# end of class ObservationDiag

####################################
class DefaultRuleDiag(wx.Dialog):
    def __init__(self, *args, **kwds):
        session = DBSession()
        # begin wxGlade: DefaultRuleDiag.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.precond_list_ctrl = CheckListCtrl(self)
        self.precond_list_ctrl.InsertColumn(0, 'Fluents', width=140)
        self.button_1 = wx.Button(self, wx.ID_ANY, _("<< Add "))
        self.list_box_1 = wx.ListBox(self, wx.ID_ANY, choices=fluentChoices(session), style=wx.LB_MULTIPLE)
        self.sizer_7_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Fluents: "))
        self.sizer_6_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Default fluents: "))
        self.button_3 = wx.Button(self, wx.ID_ANY, _("Add"))
        self.button_clear = wx.Button(self, wx.ID_ANY, _("Clear"))
        self.button_4 = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.add_f_precond_dynamic, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.add_dyrule, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.clear_lists, self.button_clear)
        self.Bind(wx.EVT_BUTTON, self.close_diag, self.button_4)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: DefaultRuleDiag.__set_properties
        self.SetTitle(_("Default Fluents"))
        self.SetSize((700, 350))
        self.list_box_1.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: DefaultRuleDiag.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(1, 3, 0, 0)
        self.sizer_6_copy_staticbox.Lower()
        sizer_6_copy = wx.StaticBoxSizer(self.sizer_6_copy_staticbox, wx.HORIZONTAL)
        self.sizer_7_copy_staticbox.Lower()
        sizer_7_copy = wx.StaticBoxSizer(self.sizer_7_copy_staticbox, wx.HORIZONTAL)
        sizer_8_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6_copy.Add(self.precond_list_ctrl, 1, wx.EXPAND, 0)
        sizer_8_copy.Add(self.button_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6_copy.Add(sizer_8_copy, 0, wx.EXPAND, 0)
        sizer_7_copy.Add(self.list_box_1, 1, wx.EXPAND, 0)
        sizer_6_copy.Add(sizer_7_copy, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_6_copy, 2, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_3, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_clear, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_4, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(grid_sizer_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        self.SetSizer(sizer_2)
        self.Layout()
        # end wxGlade

    def add_f_precond_dynamic(self, event):  # wxGlade: DefaultRuleDiag.<event_handler>
        sels = self.list_box_1.GetSelections()
        for sel in sels: 
            fl = self.list_box_1.GetString(sel)
            self.precond_list_ctrl.InsertStringItem(sys.maxint, fl)
        

    def add_dyrule(self, event):  # wxGlade: DefaultRuleDiag.<event_handler>
        nfluents = self.precond_list_ctrl.GetItemCount()
        # actions = []
        for i in range(nfluents):
            ef = self.precond_list_ctrl.GetItemText(i)
            # add add_default_rule rule to databse 
            session = DBSession()
            fval = self.precond_list_ctrl.IsChecked(i) # default = False
            if fval: 
                controller.add_default_rule(session, ef, False)
            else: 
                controller.add_default_rule(session, ef, True)
            print ef, "Added, value:", fval
        self.precond_list_ctrl.DeleteAllItems()

    def clear_lists(self, event):  # wxGlade: DefaultRuleDiag.<event_handler>
        self.precond_list_ctrl.DeleteAllItems()

    def close_diag(self, event):  # wxGlade: DefaultRuleDiag.<event_handler>
        self.Close(True)

# end of class DefaultRuleDiag

####################################
class NonconcDiag(wx.Dialog):
    def __init__(self, *args, **kwds):
        session = DBSession()
        # begin wxGlade: NonconcDiag.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.precond_list_ctrl = CheckListCtrl(self)
        self.precond_list_ctrl.InsertColumn(0, 'Action', width=140)
        self.button_1 = wx.Button(self, wx.ID_ANY, _("<< Add "))
        self.list_box_1 = wx.ListBox(self, wx.ID_ANY, choices=actionChoices(session), style=wx.LB_MULTIPLE)
        self.sizer_7_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Actions: "))
        self.sizer_6_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Non-concurrent actions: "))
        self.button_3 = wx.Button(self, wx.ID_ANY, _("Add"))
        self.button_clear = wx.Button(self, wx.ID_ANY, _("Clear"))
        self.button_4 = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.add_f_precond_dynamic, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.add_dyrule, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.clear_lists, self.button_clear)
        self.Bind(wx.EVT_BUTTON, self.close_diag, self.button_4)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: NonconcDiag.__set_properties
        self.SetTitle(_("Non-concurrency Rule"))
        self.SetSize((700, 350))
        self.list_box_1.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: NonconcDiag.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(1, 3, 0, 0)
        self.sizer_6_copy_staticbox.Lower()
        sizer_6_copy = wx.StaticBoxSizer(self.sizer_6_copy_staticbox, wx.HORIZONTAL)
        self.sizer_7_copy_staticbox.Lower()
        sizer_7_copy = wx.StaticBoxSizer(self.sizer_7_copy_staticbox, wx.HORIZONTAL)
        sizer_8_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6_copy.Add(self.precond_list_ctrl, 1, wx.EXPAND, 0)
        sizer_8_copy.Add(self.button_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6_copy.Add(sizer_8_copy, 0, wx.EXPAND, 0)
        sizer_7_copy.Add(self.list_box_1, 1, wx.EXPAND, 0)
        sizer_6_copy.Add(sizer_7_copy, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_6_copy, 2, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_3, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_clear, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_4, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(grid_sizer_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        self.SetSizer(sizer_2)
        self.Layout()
        # end wxGlade

    def add_f_precond_dynamic(self, event):  # wxGlade: NonconcDiag.<event_handler>
        sels = self.list_box_1.GetSelections()
        for sel in sels: 
            fl = self.list_box_1.GetString(sel)
            self.precond_list_ctrl.InsertStringItem(sys.maxint, fl)
        

    def add_dyrule(self, event):  # wxGlade: NonconcDiag.<event_handler>
        naction = self.precond_list_ctrl.GetItemCount()
        actions = []
        for i in range(naction):
            ef = self.precond_list_ctrl.GetItemText(i)
            actions.append(ef)
        print actions 
        # add non-concurrency rule to databse 
        session = DBSession()
        controller.add_nonconcurrency_rule(session, actions)
        self.precond_list_ctrl.DeleteAllItems()

    def clear_lists(self, event):  # wxGlade: NonconcDiag.<event_handler>
        self.precond_list_ctrl.DeleteAllItems()

    def close_diag(self, event):  # wxGlade: NonconcDiag.<event_handler>
        self.Close(True)

# end of class NonconcDiag
####################################

class InhibitRuleDiag(wx.Dialog):
    def __init__(self, *args, **kwds):
        session = DBSession() 
        # begin wxGlade: InhibitRuleDiag.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.combo_box_1 = wx.ComboBox(self, wx.ID_ANY, choices=actionChoices(session), style=wx.CB_DROPDOWN | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.sizer_9_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Action: "))
        self.precond_list_ctrl = CheckListCtrl(self)
        self.precond_list_ctrl.InsertColumn(0, 'Fluent', width=140)
        self.button_1 = wx.Button(self, wx.ID_ANY, _("<< Add "))
        self.list_box_1 = wx.ListBox(self, wx.ID_ANY, choices=fluentChoices(session), style=wx.LB_MULTIPLE)
        self.sizer_7_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Fluents: "))
        self.sizer_6_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Precondition (check the box for negative): "))
        self.button_3 = wx.Button(self, wx.ID_ANY, _("Add"))
        self.button_clear = wx.Button(self, wx.ID_ANY, _("Clear"))
        self.button_4 = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        # self.Bind(wx.EVT_COMBOBOX, self.dyrule_action_select, self.combo_box_1)
        self.Bind(wx.EVT_BUTTON, self.add_f_precond_dynamic, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.add_dyrule, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.clear_lists, self.button_clear)
        self.Bind(wx.EVT_BUTTON, self.close_diag, self.button_4)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: InhibitRuleDiag.__set_properties
        self.SetTitle(_("Inhibition Rule "))
        self.SetSize((700, 350))
        self.combo_box_1.SetSelection(0)
        self.list_box_1.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: InhibitRuleDiag.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(1, 3, 0, 0)
        self.sizer_6_copy_staticbox.Lower()
        sizer_6_copy = wx.StaticBoxSizer(self.sizer_6_copy_staticbox, wx.HORIZONTAL)
        self.sizer_7_copy_staticbox.Lower()
        sizer_7_copy = wx.StaticBoxSizer(self.sizer_7_copy_staticbox, wx.HORIZONTAL)
        sizer_8_copy = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_9_staticbox.Lower()
        sizer_9 = wx.StaticBoxSizer(self.sizer_9_staticbox, wx.HORIZONTAL)
        sizer_9.Add(self.combo_box_1, 1, 0, 0)
        sizer_2.Add(sizer_9, 0, wx.EXPAND, 0)
        sizer_6_copy.Add(self.precond_list_ctrl, 1, wx.EXPAND, 0)
        sizer_8_copy.Add(self.button_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6_copy.Add(sizer_8_copy, 0, wx.EXPAND, 0)
        sizer_7_copy.Add(self.list_box_1, 1, wx.EXPAND, 0)
        sizer_6_copy.Add(sizer_7_copy, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_6_copy, 2, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_3, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_clear, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_4, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(grid_sizer_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        self.SetSizer(sizer_2)
        self.Layout()
        # end wxGlade

    def add_f_precond_dynamic(self, event):  # wxGlade: InhibitRuleDiag.<event_handler>
        sels = self.list_box_1.GetSelections()
        for sel in sels: 
            fl = self.list_box_1.GetString(sel)
            self.precond_list_ctrl.InsertStringItem(sys.maxint, fl)
        
    def add_dyrule(self, event):  # wxGlade: InhibitRuleDiag.<event_handler>
        # get action 
        action = self.combo_box_1.GetValue() 
        # print action 
        # get precond 
        nprecond = self.precond_list_ctrl.GetItemCount()
        precond = []
        for i in range(nprecond):
            if self.precond_list_ctrl.IsChecked(i): 
                ef = 'neg('+self.precond_list_ctrl.GetItemText(i)+')'
            else: 
                ef = self.precond_list_ctrl.GetItemText(i)
            precond.append(ef)
        # print precond 
        # add Inhibit rule to databse 
        session = DBSession()
        controller.add_inhibition_rule(session, action, precond)
        self.precond_list_ctrl.DeleteAllItems() 

    def clear_lists(self, event):  # wxGlade: InhibitRuleDiag.<event_handler>
        self.precond_list_ctrl.DeleteAllItems() 
    def close_diag(self, event):  # wxGlade: InhibitRuleDiag.<event_handler>
        self.Close(True)

# end of class InhibitRuleDiag

####################################

class AllowanceRuleDiag(wx.Dialog):
    def __init__(self, *args, **kwds):
        session = DBSession() 
        # begin wxGlade: AllowanceRuleDiag.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.combo_box_1 = wx.ComboBox(self, wx.ID_ANY, choices=actionChoices(session), style=wx.CB_DROPDOWN | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.sizer_9_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Action: "))
        self.precond_list_ctrl = CheckListCtrl(self)
        self.precond_list_ctrl.InsertColumn(0, 'Fluent', width=140)
        self.button_1 = wx.Button(self, wx.ID_ANY, _("<< Add "))
        self.list_box_1 = wx.ListBox(self, wx.ID_ANY, choices=fluentChoices(session), style=wx.LB_MULTIPLE)
        self.sizer_7_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Fluents: "))
        self.sizer_6_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Precondition (check the box for negative): "))
        self.button_3 = wx.Button(self, wx.ID_ANY, _("Add"))
        self.button_clear = wx.Button(self, wx.ID_ANY, _("Clear"))
        self.button_4 = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        # self.Bind(wx.EVT_COMBOBOX, self.dyrule_action_select, self.combo_box_1)
        self.Bind(wx.EVT_BUTTON, self.add_f_precond_dynamic, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.add_dyrule, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.clear_lists, self.button_clear)
        self.Bind(wx.EVT_BUTTON, self.close_diag, self.button_4)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: AllowanceRuleDiag.__set_properties
        self.SetTitle(_("Allowance Rule "))
        self.SetSize((700, 350))
        self.combo_box_1.SetSelection(0)
        self.list_box_1.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: AllowanceRuleDiag.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(1, 3, 0, 0)
        self.sizer_6_copy_staticbox.Lower()
        sizer_6_copy = wx.StaticBoxSizer(self.sizer_6_copy_staticbox, wx.HORIZONTAL)
        self.sizer_7_copy_staticbox.Lower()
        sizer_7_copy = wx.StaticBoxSizer(self.sizer_7_copy_staticbox, wx.HORIZONTAL)
        sizer_8_copy = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_9_staticbox.Lower()
        sizer_9 = wx.StaticBoxSizer(self.sizer_9_staticbox, wx.HORIZONTAL)
        sizer_9.Add(self.combo_box_1, 1, 0, 0)
        sizer_2.Add(sizer_9, 0, wx.EXPAND, 0)
        sizer_6_copy.Add(self.precond_list_ctrl, 1, wx.EXPAND, 0)
        sizer_8_copy.Add(self.button_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6_copy.Add(sizer_8_copy, 0, wx.EXPAND, 0)
        sizer_7_copy.Add(self.list_box_1, 1, wx.EXPAND, 0)
        sizer_6_copy.Add(sizer_7_copy, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_6_copy, 2, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_3, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_clear, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_4, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(grid_sizer_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        self.SetSizer(sizer_2)
        self.Layout()
        # end wxGlade

    def add_f_precond_dynamic(self, event):  # wxGlade: AllowanceRuleDiag.<event_handler>
        sels = self.list_box_1.GetSelections()
        for sel in sels: 
            fl = self.list_box_1.GetString(sel)
            self.precond_list_ctrl.InsertStringItem(sys.maxint, fl)
        
    def add_dyrule(self, event):  # wxGlade: AllowanceRuleDiag.<event_handler>
        # get action 
        action = self.combo_box_1.GetValue() 
        # print action 
        # get precond 
        nprecond = self.precond_list_ctrl.GetItemCount()
        precond = []
        for i in range(nprecond):
            if self.precond_list_ctrl.IsChecked(i): 
                ef = 'neg('+self.precond_list_ctrl.GetItemText(i)+')'
            else: 
                ef = self.precond_list_ctrl.GetItemText(i)
            precond.append(ef)
        # print precond 
        # add Allowance rule to databse 
        session = DBSession()
        controller.add_allowance_rule(session, action, precond)
        self.precond_list_ctrl.DeleteAllItems() 

    def clear_lists(self, event):  # wxGlade: AllowanceRuleDiag.<event_handler>
        self.precond_list_ctrl.DeleteAllItems() 
    def close_diag(self, event):  # wxGlade: AllowanceRuleDiag.<event_handler>
        self.Close(True)

# end of class AllowanceRuleDiag

####################################

class TriggerRuleDiag(wx.Dialog):
    def __init__(self, *args, **kwds):
        session = DBSession() 
        # begin wxGlade: TriggerRuleDiag.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.combo_box_1 = wx.ComboBox(self, wx.ID_ANY, choices=actionChoices(session), style=wx.CB_DROPDOWN | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.sizer_9_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Action: "))
        self.precond_list_ctrl = CheckListCtrl(self)
        self.precond_list_ctrl.InsertColumn(0, 'Fluent', width=140)
        self.button_1 = wx.Button(self, wx.ID_ANY, _("<< Add "))
        self.list_box_1 = wx.ListBox(self, wx.ID_ANY, choices=fluentChoices(session), style=wx.LB_MULTIPLE)
        self.sizer_7_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Fluents: "))
        self.sizer_6_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Precondition (check the box for negative): "))
        self.button_3 = wx.Button(self, wx.ID_ANY, _("Add"))
        self.button_clear = wx.Button(self, wx.ID_ANY, _("Clear"))
        self.button_4 = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        # self.Bind(wx.EVT_COMBOBOX, self.dyrule_action_select, self.combo_box_1)
        self.Bind(wx.EVT_BUTTON, self.add_f_precond_dynamic, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.add_dyrule, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.clear_lists, self.button_clear)
        self.Bind(wx.EVT_BUTTON, self.close_diag, self.button_4)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: TriggerRuleDiag.__set_properties
        self.SetTitle(_("Trigger Rule "))
        self.SetSize((700, 350))
        self.combo_box_1.SetSelection(0)
        self.list_box_1.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: TriggerRuleDiag.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(1, 3, 0, 0)
        self.sizer_6_copy_staticbox.Lower()
        sizer_6_copy = wx.StaticBoxSizer(self.sizer_6_copy_staticbox, wx.HORIZONTAL)
        self.sizer_7_copy_staticbox.Lower()
        sizer_7_copy = wx.StaticBoxSizer(self.sizer_7_copy_staticbox, wx.HORIZONTAL)
        sizer_8_copy = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_9_staticbox.Lower()
        sizer_9 = wx.StaticBoxSizer(self.sizer_9_staticbox, wx.HORIZONTAL)
        sizer_9.Add(self.combo_box_1, 1, 0, 0)
        sizer_2.Add(sizer_9, 0, wx.EXPAND, 0)
        sizer_6_copy.Add(self.precond_list_ctrl, 1, wx.EXPAND, 0)
        sizer_8_copy.Add(self.button_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6_copy.Add(sizer_8_copy, 0, wx.EXPAND, 0)
        sizer_7_copy.Add(self.list_box_1, 1, wx.EXPAND, 0)
        sizer_6_copy.Add(sizer_7_copy, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_6_copy, 2, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_3, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_clear, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_4, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(grid_sizer_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        self.SetSizer(sizer_2)
        self.Layout()
        # end wxGlade

    def add_f_precond_dynamic(self, event):  # wxGlade: TriggerRuleDiag.<event_handler>
        sels = self.list_box_1.GetSelections()
        for sel in sels: 
            fl = self.list_box_1.GetString(sel)
            self.precond_list_ctrl.InsertStringItem(sys.maxint, fl)
        
    def add_dyrule(self, event):  # wxGlade: TriggerRuleDiag.<event_handler>
        # get action 
        action = self.combo_box_1.GetValue() 
        # print action 
        # get precond 
        nprecond = self.precond_list_ctrl.GetItemCount()
        precond = []
        for i in range(nprecond):
            if self.precond_list_ctrl.IsChecked(i): 
                ef = 'neg('+self.precond_list_ctrl.GetItemText(i)+')'
            else: 
                ef = self.precond_list_ctrl.GetItemText(i)
            precond.append(ef)
        # print precond 
        # add trigger rule to databse 
        session = DBSession()
        controller.add_trigger_rule(session, action, precond)
        self.precond_list_ctrl.DeleteAllItems() 

    def clear_lists(self, event):  # wxGlade: TriggerRuleDiag.<event_handler>
        self.precond_list_ctrl.DeleteAllItems() 
    def close_diag(self, event):  # wxGlade: TriggerRuleDiag.<event_handler>
        self.Close(True)

# end of class TriggerRuleDiag

####################################

class StaticRuleDiag(wx.Dialog):
    def __init__(self, *args, **kwds):
        session = DBSession()
        # begin wxGlade: StaticRuleDiag.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        # self.dyrule_effect_list_ctrl = CheckListCtrl(self)
        self.dyrule_effect_list_ctrl = CheckListCtrl(self)
        self.dyrule_effect_list_ctrl.InsertColumn(0, 'Fluent', width=140)
        self.button_1 = wx.Button(self, wx.ID_ANY, _("<< Add "))
        self.list_box_1 = wx.ListBox(self, wx.ID_ANY, choices=fluentChoices(session), style=wx.LB_MULTIPLE)
        # self.list_box_1 = wx.ListBox(self, wx.ID_ANY, choices=[_("FLUENT3 "), _("FLUENT 2"), _("FLUENT1")], style=wx.LB_MULTIPLE)
        self.sizer_7_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Fluents: "))
        self.sizer_6_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Effect: "))
        self.dyrule_precond_list_ctrl = CheckListCtrl(self)
        self.dyrule_precond_list_ctrl.InsertColumn(0, 'Fluent', width=140)
        self.button_1_copy = wx.Button(self, wx.ID_ANY, _("<< Add "))
        self.list_box_1_copy = wx.ListBox(self, wx.ID_ANY, choices=fluentChoices(session), style=wx.LB_MULTIPLE)
        # self.list_box_1_copy = wx.ListBox(self, wx.ID_ANY, choices=[_("SDDSDASD"), _("ASDSAD")], style=wx.LB_MULTIPLE)
        self.sizer_7_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Fluents: "))
        self.sizer_6_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Precondition: "))
        self.button_3 = wx.Button(self, wx.ID_ANY, _("Add"))
        self.button_clear = wx.Button(self, wx.ID_ANY, _("Clear"))
        self.button_4 = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.add_f_effect_dynamic, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.add_f_precond_dynamic, self.button_1_copy)
        self.Bind(wx.EVT_BUTTON, self.add_dyrule, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.clear_lists, self.button_clear)
        self.Bind(wx.EVT_BUTTON, self.close_diag, self.button_4)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: StaticRuleDiag.__set_properties
        self.SetTitle(_("Static Causal Rule"))
        self.SetSize((700, 500))
        self.list_box_1.SetSelection(0)
        self.list_box_1_copy.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: StaticRuleDiag.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(1, 3, 0, 0)
        self.sizer_6_copy_staticbox.Lower()
        sizer_6_copy = wx.StaticBoxSizer(self.sizer_6_copy_staticbox, wx.HORIZONTAL)
        self.sizer_7_copy_staticbox.Lower()
        sizer_7_copy = wx.StaticBoxSizer(self.sizer_7_copy_staticbox, wx.HORIZONTAL)
        sizer_8_copy = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_6_staticbox.Lower()
        sizer_6 = wx.StaticBoxSizer(self.sizer_6_staticbox, wx.HORIZONTAL)
        self.sizer_7_staticbox.Lower()
        sizer_7 = wx.StaticBoxSizer(self.sizer_7_staticbox, wx.HORIZONTAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6.Add(self.dyrule_effect_list_ctrl, 1, wx.EXPAND, 0)
        sizer_8.Add(self.button_1, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6.Add(sizer_8, 0, wx.EXPAND, 0)
        sizer_7.Add(self.list_box_1, 1, wx.EXPAND, 0)
        sizer_6.Add(sizer_7, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_6, 2, wx.EXPAND, 0)
        sizer_6_copy.Add(self.dyrule_precond_list_ctrl, 1, wx.EXPAND, 0)
        sizer_8_copy.Add(self.button_1_copy, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6_copy.Add(sizer_8_copy, 0, wx.EXPAND, 0)
        sizer_7_copy.Add(self.list_box_1_copy, 1, wx.EXPAND, 0)
        sizer_6_copy.Add(sizer_7_copy, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_6_copy, 2, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_3, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_clear, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_4, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(grid_sizer_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        self.SetSizer(sizer_2)
        self.Layout()
        # end wxGlade

    def add_f_effect_dynamic(self, event):  # wxGlade: DynamicRuleDiag.<event_handler>
        sels = self.list_box_1.GetSelections()
        for sel in sels: 
            fl = self.list_box_1.GetString(sel)
            self.dyrule_effect_list_ctrl.InsertStringItem(sys.maxint, fl)
        

    def add_f_precond_dynamic(self, event):  # wxGlade: DynamicRuleDiag.<event_handler>
        sels = self.list_box_1_copy.GetSelections()
        for sel in sels: 
            fl = self.list_box_1_copy.GetString(sel)
            self.dyrule_precond_list_ctrl.InsertStringItem(sys.maxint, fl)
        

    def add_dyrule(self, event):  # wxGlade: DynamicRuleDiag.<event_handler>
        # get effect 
        neffect = self.dyrule_effect_list_ctrl.GetItemCount()
        effect = []
        for i in range(neffect):
            if self.dyrule_effect_list_ctrl.IsChecked(i): 
                ef = 'neg('+self.dyrule_effect_list_ctrl.GetItemText(i)+')'
            else: 
                ef = self.dyrule_effect_list_ctrl.GetItemText(i)
            effect.append(ef)
        print effect 

        # get precond 
        nprecond = self.dyrule_precond_list_ctrl.GetItemCount()
        precond = []
        for i in range(nprecond):
            if self.dyrule_precond_list_ctrl.IsChecked(i): 
                ef = 'neg('+self.dyrule_precond_list_ctrl.GetItemText(i)+')'
            else: 
                ef = self.dyrule_precond_list_ctrl.GetItemText(i)
            precond.append(ef)
        print precond 
        #  call add dynamic rule to databse 

        session = DBSession()
        # print "adding ====="
        controller.add_static_causal_rule(session, effect, precond)
        # print "Added +++++++++"
        self.dyrule_precond_list_ctrl.DeleteAllItems() 
        self.dyrule_effect_list_ctrl.DeleteAllItems()
    
    def clear_lists(self, event):  # wxGlade: DynamicRuleDiag.<event_handler>
        self.dyrule_precond_list_ctrl.DeleteAllItems() 
        self.dyrule_effect_list_ctrl.DeleteAllItems() 

    def close_diag(self, event):  # wxGlade: DynamicRuleDiag.<event_handler>
        self.Close(True)

# end of class StaticRuleDiag
####################################

class CreateNewDiag(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: CreateNewDiag.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.fluents_text_ctrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_MULTILINE)
        self.sizer_13_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Fluents (Comma seperated): "))
        self.static_line_2 = wx.StaticLine(self, wx.ID_ANY, style=wx.LI_VERTICAL)
        self.actions_text_ctrl = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_MULTILINE)
        self.sizer_14_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Actions (Comma separated): "))
        self.label_4 = wx.StaticText(self, wx.ID_ANY, _("File Name: "))
        self.save_as_text_ctrl = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button_save_as = wx.Button(self, wx.ID_ANY, _("Save"))
        self.button_5 = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.save_file_name, self.button_save_as)
        self.Bind(wx.EVT_BUTTON, self.onClose, self.button_5)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: CreateNewDiag.__set_properties
        self.SetTitle(_("Create New Project"))
        self.SetSize((500, 400))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: CreateNewDiag.__do_layout
        sizer_11 = wx.BoxSizer(wx.VERTICAL)
        sizer_15 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_2 = wx.GridSizer(1, 2, 0, 0)
        sizer_16 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_12 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_14_staticbox.Lower()
        sizer_14 = wx.StaticBoxSizer(self.sizer_14_staticbox, wx.HORIZONTAL)
        self.sizer_13_staticbox.Lower()
        sizer_13 = wx.StaticBoxSizer(self.sizer_13_staticbox, wx.HORIZONTAL)
        sizer_13.Add(self.fluents_text_ctrl, 2, wx.EXPAND, 0)
        sizer_12.Add(sizer_13, 1, wx.EXPAND, 0)
        sizer_12.Add(self.static_line_2, 0, wx.EXPAND, 0)
        sizer_14.Add(self.actions_text_ctrl, 2, wx.EXPAND, 0)
        sizer_12.Add(sizer_14, 1, wx.EXPAND, 0)
        sizer_11.Add(sizer_12, 3, wx.EXPAND, 0)
        sizer_16.Add(self.label_4, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_16.Add(self.save_as_text_ctrl, 1, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_15.Add(sizer_16, 1, wx.EXPAND, 0)
        grid_sizer_2.Add(self.button_save_as, 0, wx.ALIGN_RIGHT | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.button_5, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_15.Add(grid_sizer_2, 1, wx.EXPAND, 0)
        sizer_11.Add(sizer_15, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_11)
        self.Layout()
        # end wxGlade

    def save_file_name(self, event):  # wxGlade: CreateNewDiag.<event_handler>
        try: 
            ftxt = self.fluents_text_ctrl.GetValue()
            print ftxt 

            atxt = self.actions_text_ctrl.GetValue() 
            print atxt
            

            newDbName = self.save_as_text_ctrl.GetValue() 
            if newDbName[-3:] != ".db":
                newDbName += ".db"
            print "Database", newDbName, "created!"
            set_global_db_name(newDbName)
            # create new database here
            create_db(CURRENT_DATABASE_FILE)
            # connect 
            controller.connect(CURRENT_DATABASE_FILE)
            # add fluents: 
            session = DBSession()
            controller.add_fluent_string(session, ftxt)
            # add actions:
            session = DBSession()
            controller.add_action_string(session, atxt)
            dial = wx.MessageDialog(None, 'New Project Created!', 'Info', wx.OK)
            dial.ShowModal()
            
            self.Close(True)
        except Exception: 
            dial = wx.MessageDialog(None, 'Error Creating New Project!', 'Error', wx.ICON_ERROR)
            dial.ShowModal()

            

    def onClose(self, event):  # wxGlade: CreateNewDiag.<event_handler>
        self.Close(True)

# end of class CreateNewDiag
class DynamicRuleDiag(wx.Dialog):
    def __init__(self, *args, **kwds):
        session = DBSession()
        # begin wxGlade: DynamicRuleDiag.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.combo_box_1 = wx.ComboBox(self, wx.ID_ANY, choices=actionChoices(session), style=wx.CB_DROPDOWN | wx.CB_DROPDOWN | wx.CB_READONLY)
        self.sizer_9_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Action: "))
        self.dyrule_effect_list_ctrl = CheckListCtrl(self)
        self.dyrule_effect_list_ctrl.InsertColumn(0, 'Fluent', width=140)
        self.button_1 = wx.Button(self, wx.ID_ANY, _("<< Add "))
        self.list_box_1 = wx.ListBox(self, wx.ID_ANY, choices=fluentChoices(session), style=wx.LB_MULTIPLE)
        self.sizer_7_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Fluents: "))
        self.sizer_6_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Effect(Check the box for negative): "))
        self.dyrule_precond_list_ctrl = CheckListCtrl(self)
        self.dyrule_precond_list_ctrl.InsertColumn(0, 'Fluent', width=140)
        self.button_1_copy = wx.Button(self, wx.ID_ANY, _("<< Add "))
        self.list_box_1_copy = wx.ListBox(self, wx.ID_ANY, choices=fluentChoices(session), style=wx.LB_MULTIPLE)
        self.sizer_7_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Fluents: "))
        self.sizer_6_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Precondition (Check the box for negative): "))
        self.button_3 = wx.Button(self, wx.ID_ANY, _("Add"))
        self.button_clear = wx.Button(self, wx.ID_ANY, _("Clear"))
        self.button_4 = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        # self.Bind(wx.EVT_COMBOBOX, self.dyrule_action_select, self.combo_box_1)
        self.Bind(wx.EVT_BUTTON, self.add_f_effect_dynamic, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.add_f_precond_dynamic, self.button_1_copy)
        self.Bind(wx.EVT_BUTTON, self.add_dyrule, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.clear_lists, self.button_clear)
        self.Bind(wx.EVT_BUTTON, self.close_diag, self.button_4)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: DynamicRuleDiag.__set_properties
        self.SetTitle(_("Dynamic Causal Rule:"))
        self.SetSize((700, 500))
        self.combo_box_1.SetSelection(0)
        self.list_box_1.SetSelection(0)
        self.list_box_1_copy.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: DynamicRuleDiag.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(1, 3, 0, 0)
        self.sizer_6_copy_staticbox.Lower()
        sizer_6_copy = wx.StaticBoxSizer(self.sizer_6_copy_staticbox, wx.HORIZONTAL)
        self.sizer_7_copy_staticbox.Lower()
        sizer_7_copy = wx.StaticBoxSizer(self.sizer_7_copy_staticbox, wx.HORIZONTAL)
        sizer_8_copy = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_6_staticbox.Lower()
        sizer_6 = wx.StaticBoxSizer(self.sizer_6_staticbox, wx.HORIZONTAL)
        self.sizer_7_staticbox.Lower()
        sizer_7 = wx.StaticBoxSizer(self.sizer_7_staticbox, wx.HORIZONTAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_9_staticbox.Lower()
        sizer_9 = wx.StaticBoxSizer(self.sizer_9_staticbox, wx.HORIZONTAL)
        sizer_9.Add(self.combo_box_1, 1, 0, 0)
        sizer_2.Add(sizer_9, 0, wx.EXPAND, 0)
        sizer_6.Add(self.dyrule_effect_list_ctrl, 1, wx.EXPAND, 0)
        sizer_8.Add(self.button_1, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6.Add(sizer_8, 0, wx.EXPAND, 0)
        sizer_7.Add(self.list_box_1, 1, wx.EXPAND, 0)
        sizer_6.Add(sizer_7, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_6, 2, wx.EXPAND, 0)
        sizer_6_copy.Add(self.dyrule_precond_list_ctrl, 1, wx.EXPAND, 0)
        sizer_8_copy.Add(self.button_1_copy, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6_copy.Add(sizer_8_copy, 0, wx.EXPAND, 0)
        sizer_7_copy.Add(self.list_box_1_copy, 1, wx.EXPAND, 0)
        sizer_6_copy.Add(sizer_7_copy, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_6_copy, 2, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_3, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_clear, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_4, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(grid_sizer_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        self.SetSizer(sizer_2)
        self.Layout()
        self.Centre()
        # end wxGlade


    def add_f_effect_dynamic(self, event):  # wxGlade: DynamicRuleDiag.<event_handler>
        sels = self.list_box_1.GetSelections()
        for sel in sels: 
            fl = self.list_box_1.GetString(sel)
            self.dyrule_effect_list_ctrl.InsertStringItem(sys.maxint, fl)
        

    def add_f_precond_dynamic(self, event):  # wxGlade: DynamicRuleDiag.<event_handler>
        sels = self.list_box_1_copy.GetSelections()
        for sel in sels: 
            fl = self.list_box_1_copy.GetString(sel)
            self.dyrule_precond_list_ctrl.InsertStringItem(sys.maxint, fl)
        

    def add_dyrule(self, event):  # wxGlade: DynamicRuleDiag.<event_handler>
        # get action 
        action = self.combo_box_1.GetValue() 
        # print action 
        # get effect 
        neffect = self.dyrule_effect_list_ctrl.GetItemCount()
        effect = []
        for i in range(neffect):
            if self.dyrule_effect_list_ctrl.IsChecked(i): 
                ef = 'neg('+self.dyrule_effect_list_ctrl.GetItemText(i)+')'
            else: 
                ef = self.dyrule_effect_list_ctrl.GetItemText(i)
            effect.append(ef)
        # print effect 

        # get precond 
        nprecond = self.dyrule_precond_list_ctrl.GetItemCount()
        precond = []
        for i in range(nprecond):
            if self.dyrule_precond_list_ctrl.IsChecked(i): 
                ef = 'neg('+self.dyrule_precond_list_ctrl.GetItemText(i)+')'
            else: 
                ef = self.dyrule_precond_list_ctrl.GetItemText(i)
            precond.append(ef)
        # print precond 
        # add dynamic rule to databse 
        session = DBSession()
        controller.add_dynamic_causal_rule(session, action, effect, precond)
        
        self.dyrule_precond_list_ctrl.DeleteAllItems() 
        self.dyrule_effect_list_ctrl.DeleteAllItems()
    
    def clear_lists(self, event):  # wxGlade: DynamicRuleDiag.<event_handler>
        self.dyrule_precond_list_ctrl.DeleteAllItems() 
        self.dyrule_effect_list_ctrl.DeleteAllItems() 

    def close_diag(self, event):  # wxGlade: DynamicRuleDiag.<event_handler>
        self.Close(True)


class ActivityDiag(wx.Dialog):
    def __init__(self, *args, **kwds):
        session = DBSession()
        # begin wxGlade: ActivityDiag.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.init_state_list_ctrl = CheckListCtrl(self)
        self.init_state_list_ctrl.InsertColumn(0, 'Fluent', width=140)
        self.button_add_fluent_init_state = wx.Button(self, wx.ID_ANY, _("<< Add "))
        self.list_box_1 = wx.ListBox(self, wx.ID_ANY, choices=fluentChoices(session), style=wx.LB_MULTIPLE)
        self.sizer_7_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Fluents: "))
        self.sizer_6_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Initial State (Check the box for negative values): "))
        self.final_state_list_ctrl = CheckListCtrl(self)
        self.final_state_list_ctrl.InsertColumn(0, 'Fluent', width=140)
        self.button_add_fluent_final_state = wx.Button(self, wx.ID_ANY, _("<< Add "))
        self.list_box_2 = wx.ListBox(self, wx.ID_ANY, choices=fluentChoices(session), style=wx.LB_MULTIPLE)
        self.sizer_7_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Fluents: "))
        self.sizer_6_copy_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Final State (Check the box for negative values): "))
        self.activity_action_list_ctrl = CheckListCtrl(self)
        self.activity_action_list_ctrl.InsertColumn(0, 'Action', width=140)
        self.button_add_actions = wx.Button(self, wx.ID_ANY, _("<< Add "))
        self.list_box_actions = wx.ListBox(self, wx.ID_ANY, choices=actionChoices(session), style=wx.LB_MULTIPLE)
        self.sizer_7_copy_1_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Actions: "))
        self.sizer_6_copy_1_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Action List: "))
        self.button_run_activity = wx.Button(self, wx.ID_ANY, _("Run"))
        self.button_clear_activity = wx.Button(self, wx.ID_ANY, _("Clear"))
        self.button_4 = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.add_init_state_fluents, self.button_add_fluent_init_state)
        self.Bind(wx.EVT_BUTTON, self.add_final_state_fluents, self.button_add_fluent_final_state)
        self.Bind(wx.EVT_BUTTON, self.add_f_effect_dynamic, self.button_add_actions)
        self.Bind(wx.EVT_BUTTON, self.run_activity_recog, self.button_run_activity)
        self.Bind(wx.EVT_BUTTON, self.clear_activity, self.button_clear_activity)
        self.Bind(wx.EVT_BUTTON, self.close_diag, self.button_4)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: ActivityDiag.__set_properties
        self.SetTitle(_("Activity "))
        self.SetSize((700, 500))
        self.list_box_1.SetSelection(0)
        self.list_box_2.SetSelection(0)
        self.list_box_actions.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ActivityDiag.__do_layout
        sizer_10 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(1, 4, 0, 0)
        self.sizer_6_copy_1_staticbox.Lower()
        sizer_6_copy_1 = wx.StaticBoxSizer(self.sizer_6_copy_1_staticbox, wx.HORIZONTAL)
        self.sizer_7_copy_1_staticbox.Lower()
        sizer_7_copy_1 = wx.StaticBoxSizer(self.sizer_7_copy_1_staticbox, wx.HORIZONTAL)
        sizer_8_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_6_copy_staticbox.Lower()
        sizer_6_copy = wx.StaticBoxSizer(self.sizer_6_copy_staticbox, wx.HORIZONTAL)
        self.sizer_7_copy_staticbox.Lower()
        sizer_7_copy = wx.StaticBoxSizer(self.sizer_7_copy_staticbox, wx.HORIZONTAL)
        sizer_8_copy = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_6_staticbox.Lower()
        sizer_6 = wx.StaticBoxSizer(self.sizer_6_staticbox, wx.HORIZONTAL)
        self.sizer_7_staticbox.Lower()
        sizer_7 = wx.StaticBoxSizer(self.sizer_7_staticbox, wx.HORIZONTAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6.Add(self.init_state_list_ctrl, 1, wx.EXPAND, 0)
        sizer_8.Add(self.button_add_fluent_init_state, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6.Add(sizer_8, 0, wx.EXPAND, 0)
        sizer_7.Add(self.list_box_1, 1, wx.EXPAND, 0)
        sizer_6.Add(sizer_7, 1, wx.EXPAND, 0)
        sizer_10.Add(sizer_6, 2, wx.EXPAND, 0)
        sizer_6_copy.Add(self.final_state_list_ctrl, 1, wx.EXPAND, 0)
        sizer_8_copy.Add(self.button_add_fluent_final_state, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6_copy.Add(sizer_8_copy, 0, wx.EXPAND, 0)
        sizer_7_copy.Add(self.list_box_2, 1, wx.EXPAND, 0)
        sizer_6_copy.Add(sizer_7_copy, 1, wx.EXPAND, 0)
        sizer_10.Add(sizer_6_copy, 2, wx.EXPAND, 0)
        sizer_6_copy_1.Add(self.activity_action_list_ctrl, 1, wx.EXPAND, 0)
        sizer_8_copy_1.Add(self.button_add_actions, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6_copy_1.Add(sizer_8_copy_1, 0, wx.EXPAND, 0)
        sizer_7_copy_1.Add(self.list_box_actions, 1, wx.EXPAND, 0)
        sizer_6_copy_1.Add(sizer_7_copy_1, 1, wx.EXPAND, 0)
        sizer_10.Add(sizer_6_copy_1, 2, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_run_activity, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_clear_activity, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.button_4, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_10.Add(grid_sizer_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 0)
        self.SetSizer(sizer_10)
        self.Layout()
        self.Centre()
        # end wxGlade

    def add_init_state_fluents(self, event):
        sels = self.list_box_1.GetSelections()
    	index = 0
        for sel in sels: 
                fl = self.list_box_1.GetString(sel)
                self.init_state_list_ctrl.InsertStringItem(index, fl) 
                index += 1 

    def add_final_state_fluents(self, event):  # wxGlade: ActivityDiag.<event_handler>
        sels = self.list_box_2.GetSelections()
        index = 0
        for sel in sels: 
            fl = self.list_box_2.GetString(sel)
            self.final_state_list_ctrl.InsertStringItem(index, fl)
            index += 1
        

    def add_f_effect_dynamic(self, event):  # wxGlade: ActivityDiag.<event_handler>
        sels = self.list_box_actions.GetSelections()
        index = 0
        for sel in sels: 
            fl = self.list_box_actions.GetString(sel)
            self.activity_action_list_ctrl.InsertStringItem(index, fl)
            index += 1
        

    def run_activity_recog(self, event):  # wxGlade: ActivityDiag.<event_handler>
        # get action list 
        naction = self.activity_action_list_ctrl.GetItemCount()
        actionList = {}
        for i in range(naction):
            # if self.activity_action_list_ctrl.IsChecked(i): 
            #     ef = 'neg('+self.activity_action_list_ctrl.GetItemText(i)+')'
            # else: 
            ef = self.activity_action_list_ctrl.GetItemText(i)
            actionList[i] = set([ef])
        # print actionList  
        
        # get init state 
        ninit = self.init_state_list_ctrl.GetItemCount()
        init = []
        for i in range(ninit):
            if self.init_state_list_ctrl.IsChecked(i): 
                ef = 'neg('+self.init_state_list_ctrl.GetItemText(i)+')'
            else: 
                ef = self.init_state_list_ctrl.GetItemText(i)
            init.append(ef)
        # print init  

        # get final 
        nfinal = self.final_state_list_ctrl.GetItemCount()
        final = []
        for i in range(nfinal):
            if self.final_state_list_ctrl.IsChecked(i): 
                ef = 'neg('+self.final_state_list_ctrl.GetItemText(i)+')'
            else: 
                ef = self.final_state_list_ctrl.GetItemText(i)
            final.append(ef)
        # print final 
        #  ++ call activity recog algo
        session = DBSession()
        actRec(session, initState=set(init), finalState=set(final), actionList=actionList)

        # clear ctrl lists: 
        self.activity_action_list_ctrl.DeleteAllItems() 
        self.init_state_list_ctrl.DeleteAllItems() 
        self.final_state_list_ctrl.DeleteAllItems() 

        self.Close(True)

    def clear_activity(self, event):  # wxGlade: ActivityDiag.<event_handler>
        self.activity_action_list_ctrl.DeleteAllItems() 
        self.init_state_list_ctrl.DeleteAllItems() 
        self.final_state_list_ctrl.DeleteAllItems()

    def close_diag(self, event):  # wxGlade: ActivityDiag.<event_handler>
        self.Close(True)

# end of class ActivityDiag

if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    ActRec = MyFrame(None, wx.ID_ANY, "")
    app.SetTopWindow(ActRec)
    ActRec.Show()
    app.MainLoop()
